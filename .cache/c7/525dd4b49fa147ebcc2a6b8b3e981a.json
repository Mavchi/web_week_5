{"id":"src/index.js","dependencies":[{"name":"/project/web_week_5/package.json","includedInParent":true,"mtime":1664734361791},{"name":"./styles.css","loc":{"line":1,"column":7,"index":7},"parent":"/project/web_week_5/src/index.js","resolved":"/project/web_week_5/src/styles.css"},{"name":"./leaflet/leaflet.css","loc":{"line":2,"column":7,"index":30},"parent":"/project/web_week_5/src/index.js","resolved":"/project/web_week_5/src/leaflet/leaflet.css"},{"name":"./leaflet/leaflet","loc":{"line":3,"column":7,"index":61},"parent":"/project/web_week_5/src/index.js","resolved":"/project/web_week_5/src/leaflet/leaflet.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"./styles.css\");\n\nrequire(\"./leaflet/leaflet.css\");\n\nrequire(\"./leaflet/leaflet\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar fetchData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var urlGeoData, urlPositiveMigrationData, urlNegativeMigrationData, response1, geoData, response2, positiveMigrationData, response3, negativeMigrationData;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            urlGeoData = \"https://geo.stat.fi/geoserver/wfs?service=WFS&version=2.0.0&request=GetFeature&typeName=tilastointialueet:kunta4500k&outputFormat=json&srsName=EPSG:4326\";\n            urlPositiveMigrationData = \"https://statfin.stat.fi/PxWeb/sq/4bb2c735-1dc3-4c5e-bde7-2165df85e65f\";\n            urlNegativeMigrationData = \"https://statfin.stat.fi/PxWeb/sq/944493ca-ea4d-4fd9-a75c-4975192f7b6e\";\n            _context.next = 5;\n            return fetch(urlGeoData);\n\n          case 5:\n            response1 = _context.sent;\n            _context.next = 8;\n            return response1.json();\n\n          case 8:\n            geoData = _context.sent;\n            _context.next = 11;\n            return fetch(urlPositiveMigrationData);\n\n          case 11:\n            response2 = _context.sent;\n            _context.next = 14;\n            return response2.json();\n\n          case 14:\n            positiveMigrationData = _context.sent;\n            _context.next = 17;\n            return fetch(urlNegativeMigrationData);\n\n          case 17:\n            response3 = _context.sent;\n            _context.next = 20;\n            return response3.json();\n\n          case 20:\n            negativeMigrationData = _context.sent;\n            initMap(geoData, positiveMigrationData, negativeMigrationData);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar initMap = function initMap(geoData, positiveMigrationData, negativeMigrationData) {\n  var index = 0;\n\n  var getFeature = function getFeature(feature, layer) {\n    index++; //console.log(feature)\n    //layer.bindPopup(`<p>${feature.properties.name}</p>`)\n\n    layer.bindTooltip(\"<p>\".concat(feature.properties.name, \"</p>\")).openTooltip();\n    layer.bindPopup(\"<ul>\\n                <li>\".concat(positiveMigrationData.dataset.value[index], \"</li>\\n                <li>\").concat(negativeMigrationData.dataset.value[index], \"</li>\\n            </ul>\")); //console.log(feature.id)\n    //console.log(positiveMigrationData)\n    //console.log(geoData)\n    //console.log(positiveMigrationData.dataset.value[index])\n  };\n\n  var getStyle = function getStyle(feature) {\n    return {\n      weight: 2\n    };\n  };\n\n  var map = L.map('map', {\n    minZoom: -3\n  });\n  var geoJson = L.geoJSON(geoData, {\n    onEachFeature: getFeature,\n    style: getStyle\n  }).addTo(map);\n  var osm = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n    maxZoom: 19,\n    attribution: \"© OpenStreetMap\"\n  }).addTo(map);\n  var google = L.tileLayer(\"https://{s}.google.com/vt/lyrs=s@221097413,traffic&x={x}&y={y}&z={z}\", {\n    maxZoom: 20,\n    minZoom: 2,\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\n  }).addTo(map);\n  var baseMaps = {\n    \"OpenStreetMap\": osm,\n    \"Google Maps\": google\n  };\n  var overlayMaps = {\n    \"Suomen kunnat\": geoJson\n  };\n  var layerControl = L.control.layers(baseMaps, overlayMaps).addTo(map);\n  map.fitBounds(geoJson.getBounds());\n};\n\nfetchData();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":47},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":4},"source":"src/index.js","original":{"line":5,"column":6},"name":"fetchData"},{"generated":{"line":17,"column":13},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":18,"column":2},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":18,"column":72},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":19,"column":4},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":20,"column":4},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":21,"column":6},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":22,"column":8},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":23,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":24,"column":12},"source":"src/index.js","original":{"line":6,"column":10},"name":"urlGeoData"},{"generated":{"line":24,"column":22},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":24,"column":25},"source":"src/index.js","original":{"line":6,"column":23}},{"generated":{"line":24,"column":179},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":25,"column":12},"source":"src/index.js","original":{"line":7,"column":10},"name":"urlPositiveMigrationData"},{"generated":{"line":25,"column":36},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":25,"column":39},"source":"src/index.js","original":{"line":7,"column":37}},{"generated":{"line":25,"column":110},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":26,"column":12},"source":"src/index.js","original":{"line":8,"column":10},"name":"urlNegativeMigrationData"},{"generated":{"line":26,"column":36},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":26,"column":39},"source":"src/index.js","original":{"line":8,"column":37}},{"generated":{"line":26,"column":110},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":27,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":28,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":28,"column":19},"source":"src/index.js","original":{"line":10,"column":28},"name":"fetch"},{"generated":{"line":28,"column":24},"source":"src/index.js","original":{"line":10,"column":33}},{"generated":{"line":28,"column":25},"source":"src/index.js","original":{"line":10,"column":34},"name":"urlGeoData"},{"generated":{"line":28,"column":35},"source":"src/index.js","original":{"line":10,"column":33}},{"generated":{"line":28,"column":36},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":30,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":31,"column":12},"source":"src/index.js","original":{"line":10,"column":10},"name":"response1"},{"generated":{"line":31,"column":21},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":32,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":33,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":33,"column":19},"source":"src/index.js","original":{"line":11,"column":26},"name":"response1"},{"generated":{"line":33,"column":28},"source":"src/index.js","original":{"line":11,"column":35}},{"generated":{"line":33,"column":29},"source":"src/index.js","original":{"line":11,"column":36},"name":"json"},{"generated":{"line":33,"column":33},"source":"src/index.js","original":{"line":11,"column":26}},{"generated":{"line":33,"column":35},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":35,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":36,"column":12},"source":"src/index.js","original":{"line":11,"column":10},"name":"geoData"},{"generated":{"line":36,"column":19},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":37,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":38,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":38,"column":19},"source":"src/index.js","original":{"line":13,"column":28},"name":"fetch"},{"generated":{"line":38,"column":24},"source":"src/index.js","original":{"line":13,"column":33}},{"generated":{"line":38,"column":25},"source":"src/index.js","original":{"line":13,"column":34},"name":"urlPositiveMigrationData"},{"generated":{"line":38,"column":49},"source":"src/index.js","original":{"line":13,"column":33}},{"generated":{"line":38,"column":50},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":40,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":41,"column":12},"source":"src/index.js","original":{"line":13,"column":10},"name":"response2"},{"generated":{"line":41,"column":21},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":42,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":43,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":43,"column":19},"source":"src/index.js","original":{"line":14,"column":40},"name":"response2"},{"generated":{"line":43,"column":28},"source":"src/index.js","original":{"line":14,"column":49}},{"generated":{"line":43,"column":29},"source":"src/index.js","original":{"line":14,"column":50},"name":"json"},{"generated":{"line":43,"column":33},"source":"src/index.js","original":{"line":14,"column":40}},{"generated":{"line":43,"column":35},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":45,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":46,"column":12},"source":"src/index.js","original":{"line":14,"column":10},"name":"positiveMigrationData"},{"generated":{"line":46,"column":33},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":47,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":48,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":48,"column":19},"source":"src/index.js","original":{"line":16,"column":28},"name":"fetch"},{"generated":{"line":48,"column":24},"source":"src/index.js","original":{"line":16,"column":33}},{"generated":{"line":48,"column":25},"source":"src/index.js","original":{"line":16,"column":34},"name":"urlNegativeMigrationData"},{"generated":{"line":48,"column":49},"source":"src/index.js","original":{"line":16,"column":33}},{"generated":{"line":48,"column":50},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":50,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":51,"column":12},"source":"src/index.js","original":{"line":16,"column":10},"name":"response3"},{"generated":{"line":51,"column":21},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":52,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":53,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":53,"column":19},"source":"src/index.js","original":{"line":17,"column":40},"name":"response3"},{"generated":{"line":53,"column":28},"source":"src/index.js","original":{"line":17,"column":49}},{"generated":{"line":53,"column":29},"source":"src/index.js","original":{"line":17,"column":50},"name":"json"},{"generated":{"line":53,"column":33},"source":"src/index.js","original":{"line":17,"column":40}},{"generated":{"line":53,"column":35},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":55,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":56,"column":12},"source":"src/index.js","original":{"line":17,"column":10},"name":"negativeMigrationData"},{"generated":{"line":56,"column":33},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":57,"column":12},"source":"src/index.js","original":{"line":19,"column":4},"name":"initMap"},{"generated":{"line":57,"column":19},"source":"src/index.js","original":{"line":19,"column":11}},{"generated":{"line":57,"column":20},"source":"src/index.js","original":{"line":19,"column":12},"name":"geoData"},{"generated":{"line":57,"column":27},"source":"src/index.js","original":{"line":19,"column":11}},{"generated":{"line":57,"column":29},"source":"src/index.js","original":{"line":19,"column":21},"name":"positiveMigrationData"},{"generated":{"line":57,"column":50},"source":"src/index.js","original":{"line":19,"column":11}},{"generated":{"line":57,"column":52},"source":"src/index.js","original":{"line":19,"column":44},"name":"negativeMigrationData"},{"generated":{"line":57,"column":73},"source":"src/index.js","original":{"line":19,"column":11}},{"generated":{"line":57,"column":74},"source":"src/index.js","original":{"line":19,"column":4}},{"generated":{"line":59,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":60,"column":10},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":61,"column":12},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":62,"column":8},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":63,"column":6},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":64,"column":4},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":65,"column":2},"source":"src/index.js","original":{"line":5,"column":18}},{"generated":{"line":65,"column":3},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":67,"column":2},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":67,"column":18},"source":"src/index.js","original":{"line":5,"column":6},"name":"fetchData"},{"generated":{"line":67,"column":27},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":68,"column":4},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":69,"column":2},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":70,"column":0},"source":"src/index.js","original":{"line":5,"column":15}},{"generated":{"line":70,"column":3},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":72,"column":0},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":72,"column":4},"source":"src/index.js","original":{"line":22,"column":6},"name":"initMap"},{"generated":{"line":72,"column":11},"source":"src/index.js","original":{"line":22,"column":13}},{"generated":{"line":72,"column":14},"source":"src/index.js","original":{"line":22,"column":16}},{"generated":{"line":72,"column":23},"source":"src/index.js","original":{"line":22,"column":6},"name":"initMap"},{"generated":{"line":72,"column":30},"source":"src/index.js","original":{"line":22,"column":16}},{"generated":{"line":72,"column":31},"source":"src/index.js","original":{"line":22,"column":17},"name":"geoData"},{"generated":{"line":72,"column":38},"source":"src/index.js","original":{"line":22,"column":16}},{"generated":{"line":72,"column":40},"source":"src/index.js","original":{"line":22,"column":26},"name":"positiveMigrationData"},{"generated":{"line":72,"column":61},"source":"src/index.js","original":{"line":22,"column":16}},{"generated":{"line":72,"column":63},"source":"src/index.js","original":{"line":22,"column":49},"name":"negativeMigrationData"},{"generated":{"line":72,"column":84},"source":"src/index.js","original":{"line":22,"column":16}},{"generated":{"line":72,"column":86},"source":"src/index.js","original":{"line":22,"column":75}},{"generated":{"line":73,"column":2},"source":"src/index.js","original":{"line":23,"column":4}},{"generated":{"line":73,"column":6},"source":"src/index.js","original":{"line":23,"column":8},"name":"index"},{"generated":{"line":73,"column":11},"source":"src/index.js","original":{"line":23,"column":13}},{"generated":{"line":73,"column":14},"source":"src/index.js","original":{"line":23,"column":16}},{"generated":{"line":73,"column":15},"source":"src/index.js","original":{"line":23,"column":4}},{"generated":{"line":75,"column":2},"source":"src/index.js","original":{"line":24,"column":4}},{"generated":{"line":75,"column":6},"source":"src/index.js","original":{"line":24,"column":10},"name":"getFeature"},{"generated":{"line":75,"column":16},"source":"src/index.js","original":{"line":24,"column":20}},{"generated":{"line":75,"column":19},"source":"src/index.js","original":{"line":24,"column":23}},{"generated":{"line":75,"column":28},"source":"src/index.js","original":{"line":24,"column":10},"name":"getFeature"},{"generated":{"line":75,"column":38},"source":"src/index.js","original":{"line":24,"column":23}},{"generated":{"line":75,"column":39},"source":"src/index.js","original":{"line":24,"column":24},"name":"feature"},{"generated":{"line":75,"column":46},"source":"src/index.js","original":{"line":24,"column":23}},{"generated":{"line":75,"column":48},"source":"src/index.js","original":{"line":24,"column":33},"name":"layer"},{"generated":{"line":75,"column":53},"source":"src/index.js","original":{"line":24,"column":23}},{"generated":{"line":75,"column":55},"source":"src/index.js","original":{"line":24,"column":43}},{"generated":{"line":76,"column":4},"source":"src/index.js","original":{"line":25,"column":8},"name":"index"},{"generated":{"line":76,"column":9},"source":"src/index.js","original":{"line":25,"column":13}},{"generated":{"line":76,"column":12},"source":"src/index.js","original":{"line":24,"column":43}},{"generated":{"line":76,"column":13},"source":"src/index.js","original":{"line":26,"column":8}},{"generated":{"line":77,"column":4},"source":"src/index.js","original":{"line":27,"column":8}},{"generated":{"line":79,"column":4},"source":"src/index.js","original":{"line":28,"column":8},"name":"layer"},{"generated":{"line":79,"column":9},"source":"src/index.js","original":{"line":28,"column":13}},{"generated":{"line":79,"column":10},"source":"src/index.js","original":{"line":28,"column":14},"name":"bindTooltip"},{"generated":{"line":79,"column":21},"source":"src/index.js","original":{"line":28,"column":8}},{"generated":{"line":79,"column":35},"source":"src/index.js","original":{"line":28,"column":32},"name":"feature"},{"generated":{"line":79,"column":42},"source":"src/index.js","original":{"line":28,"column":39}},{"generated":{"line":79,"column":43},"source":"src/index.js","original":{"line":28,"column":40},"name":"properties"},{"generated":{"line":79,"column":53},"source":"src/index.js","original":{"line":28,"column":32}},{"generated":{"line":79,"column":54},"source":"src/index.js","original":{"line":28,"column":51},"name":"name"},{"generated":{"line":79,"column":58},"source":"src/index.js","original":{"line":28,"column":8}},{"generated":{"line":79,"column":69},"source":"src/index.js","original":{"line":28,"column":63},"name":"openTooltip"},{"generated":{"line":79,"column":80},"source":"src/index.js","original":{"line":28,"column":8}},{"generated":{"line":80,"column":4},"source":"src/index.js","original":{"line":30,"column":8},"name":"layer"},{"generated":{"line":80,"column":9},"source":"src/index.js","original":{"line":30,"column":13}},{"generated":{"line":80,"column":10},"source":"src/index.js","original":{"line":30,"column":14},"name":"bindPopup"},{"generated":{"line":80,"column":19},"source":"src/index.js","original":{"line":30,"column":8}},{"generated":{"line":80,"column":56},"source":"src/index.js","original":{"line":32,"column":22},"name":"positiveMigrationData"},{"generated":{"line":80,"column":77},"source":"src/index.js","original":{"line":32,"column":43}},{"generated":{"line":80,"column":78},"source":"src/index.js","original":{"line":32,"column":44},"name":"dataset"},{"generated":{"line":80,"column":85},"source":"src/index.js","original":{"line":32,"column":22}},{"generated":{"line":80,"column":86},"source":"src/index.js","original":{"line":32,"column":52},"name":"value"},{"generated":{"line":80,"column":91},"source":"src/index.js","original":{"line":32,"column":22}},{"generated":{"line":80,"column":92},"source":"src/index.js","original":{"line":32,"column":58},"name":"index"},{"generated":{"line":80,"column":97},"source":"src/index.js","original":{"line":32,"column":22}},{"generated":{"line":80,"column":98},"source":"src/index.js","original":{"line":30,"column":8}},{"generated":{"line":80,"column":138},"source":"src/index.js","original":{"line":33,"column":22},"name":"negativeMigrationData"},{"generated":{"line":80,"column":159},"source":"src/index.js","original":{"line":33,"column":43}},{"generated":{"line":80,"column":160},"source":"src/index.js","original":{"line":33,"column":44},"name":"dataset"},{"generated":{"line":80,"column":167},"source":"src/index.js","original":{"line":33,"column":22}},{"generated":{"line":80,"column":168},"source":"src/index.js","original":{"line":33,"column":52},"name":"value"},{"generated":{"line":80,"column":173},"source":"src/index.js","original":{"line":33,"column":22}},{"generated":{"line":80,"column":174},"source":"src/index.js","original":{"line":33,"column":58},"name":"index"},{"generated":{"line":80,"column":179},"source":"src/index.js","original":{"line":33,"column":22}},{"generated":{"line":80,"column":180},"source":"src/index.js","original":{"line":30,"column":8}},{"generated":{"line":80,"column":211},"source":"src/index.js","original":{"line":24,"column":43}},{"generated":{"line":80,"column":212},"source":"src/index.js","original":{"line":36,"column":8}},{"generated":{"line":81,"column":4},"source":"src/index.js","original":{"line":37,"column":8}},{"generated":{"line":82,"column":4},"source":"src/index.js","original":{"line":38,"column":8}},{"generated":{"line":83,"column":4},"source":"src/index.js","original":{"line":39,"column":8}},{"generated":{"line":84,"column":2},"source":"src/index.js","original":{"line":40,"column":5}},{"generated":{"line":84,"column":3},"source":"src/index.js","original":{"line":24,"column":4}},{"generated":{"line":86,"column":2},"source":"src/index.js","original":{"line":42,"column":4}},{"generated":{"line":86,"column":6},"source":"src/index.js","original":{"line":42,"column":10},"name":"getStyle"},{"generated":{"line":86,"column":14},"source":"src/index.js","original":{"line":42,"column":18}},{"generated":{"line":86,"column":17},"source":"src/index.js","original":{"line":42,"column":21}},{"generated":{"line":86,"column":26},"source":"src/index.js","original":{"line":42,"column":10},"name":"getStyle"},{"generated":{"line":86,"column":34},"source":"src/index.js","original":{"line":42,"column":21}},{"generated":{"line":86,"column":35},"source":"src/index.js","original":{"line":42,"column":22},"name":"feature"},{"generated":{"line":86,"column":42},"source":"src/index.js","original":{"line":42,"column":21}},{"generated":{"line":86,"column":44},"source":"src/index.js","original":{"line":42,"column":34}},{"generated":{"line":87,"column":4},"source":"src/index.js","original":{"line":43,"column":8}},{"generated":{"line":87,"column":11},"source":"src/index.js","original":{"line":43,"column":15}},{"generated":{"line":88,"column":6},"source":"src/index.js","original":{"line":44,"column":12},"name":"weight"},{"generated":{"line":88,"column":12},"source":"src/index.js","original":{"line":44,"column":18}},{"generated":{"line":88,"column":14},"source":"src/index.js","original":{"line":44,"column":20}},{"generated":{"line":89,"column":4},"source":"src/index.js","original":{"line":43,"column":15}},{"generated":{"line":89,"column":5},"source":"src/index.js","original":{"line":43,"column":8}},{"generated":{"line":90,"column":2},"source":"src/index.js","original":{"line":46,"column":5}},{"generated":{"line":90,"column":3},"source":"src/index.js","original":{"line":42,"column":4}},{"generated":{"line":92,"column":2},"source":"src/index.js","original":{"line":48,"column":4}},{"generated":{"line":92,"column":6},"source":"src/index.js","original":{"line":48,"column":8},"name":"map"},{"generated":{"line":92,"column":9},"source":"src/index.js","original":{"line":48,"column":11}},{"generated":{"line":92,"column":12},"source":"src/index.js","original":{"line":48,"column":14},"name":"L"},{"generated":{"line":92,"column":13},"source":"src/index.js","original":{"line":48,"column":15}},{"generated":{"line":92,"column":14},"source":"src/index.js","original":{"line":48,"column":16},"name":"map"},{"generated":{"line":92,"column":17},"source":"src/index.js","original":{"line":48,"column":14}},{"generated":{"line":92,"column":18},"source":"src/index.js","original":{"line":48,"column":20}},{"generated":{"line":92,"column":23},"source":"src/index.js","original":{"line":48,"column":14}},{"generated":{"line":92,"column":25},"source":"src/index.js","original":{"line":48,"column":27}},{"generated":{"line":93,"column":4},"source":"src/index.js","original":{"line":49,"column":8},"name":"minZoom"},{"generated":{"line":93,"column":11},"source":"src/index.js","original":{"line":49,"column":15}},{"generated":{"line":93,"column":13},"source":"src/index.js","original":{"line":49,"column":17}},{"generated":{"line":93,"column":14},"source":"src/index.js","original":{"line":49,"column":18}},{"generated":{"line":94,"column":2},"source":"src/index.js","original":{"line":48,"column":27}},{"generated":{"line":94,"column":3},"source":"src/index.js","original":{"line":48,"column":14}},{"generated":{"line":94,"column":4},"source":"src/index.js","original":{"line":48,"column":4}},{"generated":{"line":95,"column":2},"source":"src/index.js","original":{"line":52,"column":4}},{"generated":{"line":95,"column":6},"source":"src/index.js","original":{"line":52,"column":8},"name":"geoJson"},{"generated":{"line":95,"column":13},"source":"src/index.js","original":{"line":52,"column":15}},{"generated":{"line":95,"column":16},"source":"src/index.js","original":{"line":52,"column":18},"name":"L"},{"generated":{"line":95,"column":17},"source":"src/index.js","original":{"line":52,"column":19}},{"generated":{"line":95,"column":18},"source":"src/index.js","original":{"line":52,"column":20},"name":"geoJSON"},{"generated":{"line":95,"column":25},"source":"src/index.js","original":{"line":52,"column":18}},{"generated":{"line":95,"column":26},"source":"src/index.js","original":{"line":52,"column":28},"name":"geoData"},{"generated":{"line":95,"column":33},"source":"src/index.js","original":{"line":52,"column":18}},{"generated":{"line":95,"column":35},"source":"src/index.js","original":{"line":52,"column":37}},{"generated":{"line":96,"column":4},"source":"src/index.js","original":{"line":53,"column":8},"name":"onEachFeature"},{"generated":{"line":96,"column":17},"source":"src/index.js","original":{"line":53,"column":21}},{"generated":{"line":96,"column":19},"source":"src/index.js","original":{"line":53,"column":23},"name":"getFeature"},{"generated":{"line":96,"column":29},"source":"src/index.js","original":{"line":52,"column":37}},{"generated":{"line":97,"column":4},"source":"src/index.js","original":{"line":54,"column":8},"name":"style"},{"generated":{"line":97,"column":9},"source":"src/index.js","original":{"line":54,"column":13}},{"generated":{"line":97,"column":11},"source":"src/index.js","original":{"line":54,"column":15},"name":"getStyle"},{"generated":{"line":98,"column":2},"source":"src/index.js","original":{"line":52,"column":37}},{"generated":{"line":98,"column":3},"source":"src/index.js","original":{"line":52,"column":18}},{"generated":{"line":98,"column":5},"source":"src/index.js","original":{"line":55,"column":7},"name":"addTo"},{"generated":{"line":98,"column":10},"source":"src/index.js","original":{"line":52,"column":18}},{"generated":{"line":98,"column":11},"source":"src/index.js","original":{"line":55,"column":13},"name":"map"},{"generated":{"line":98,"column":14},"source":"src/index.js","original":{"line":52,"column":18}},{"generated":{"line":98,"column":15},"source":"src/index.js","original":{"line":52,"column":4}},{"generated":{"line":99,"column":2},"source":"src/index.js","original":{"line":57,"column":4}},{"generated":{"line":99,"column":6},"source":"src/index.js","original":{"line":57,"column":8},"name":"osm"},{"generated":{"line":99,"column":9},"source":"src/index.js","original":{"line":57,"column":11}},{"generated":{"line":99,"column":12},"source":"src/index.js","original":{"line":57,"column":14},"name":"L"},{"generated":{"line":99,"column":13},"source":"src/index.js","original":{"line":57,"column":15}},{"generated":{"line":99,"column":14},"source":"src/index.js","original":{"line":57,"column":16},"name":"tileLayer"},{"generated":{"line":99,"column":23},"source":"src/index.js","original":{"line":57,"column":14}},{"generated":{"line":99,"column":24},"source":"src/index.js","original":{"line":57,"column":26}},{"generated":{"line":99,"column":76},"source":"src/index.js","original":{"line":57,"column":14}},{"generated":{"line":99,"column":78},"source":"src/index.js","original":{"line":57,"column":80}},{"generated":{"line":100,"column":4},"source":"src/index.js","original":{"line":58,"column":8},"name":"maxZoom"},{"generated":{"line":100,"column":11},"source":"src/index.js","original":{"line":58,"column":15}},{"generated":{"line":100,"column":13},"source":"src/index.js","original":{"line":58,"column":17}},{"generated":{"line":100,"column":15},"source":"src/index.js","original":{"line":57,"column":80}},{"generated":{"line":101,"column":4},"source":"src/index.js","original":{"line":59,"column":8},"name":"attribution"},{"generated":{"line":101,"column":15},"source":"src/index.js","original":{"line":59,"column":19}},{"generated":{"line":101,"column":17},"source":"src/index.js","original":{"line":59,"column":21}},{"generated":{"line":102,"column":2},"source":"src/index.js","original":{"line":57,"column":80}},{"generated":{"line":102,"column":3},"source":"src/index.js","original":{"line":57,"column":14}},{"generated":{"line":102,"column":5},"source":"src/index.js","original":{"line":60,"column":7},"name":"addTo"},{"generated":{"line":102,"column":10},"source":"src/index.js","original":{"line":57,"column":14}},{"generated":{"line":102,"column":11},"source":"src/index.js","original":{"line":60,"column":13},"name":"map"},{"generated":{"line":102,"column":14},"source":"src/index.js","original":{"line":57,"column":14}},{"generated":{"line":102,"column":15},"source":"src/index.js","original":{"line":57,"column":4}},{"generated":{"line":103,"column":2},"source":"src/index.js","original":{"line":62,"column":4}},{"generated":{"line":103,"column":6},"source":"src/index.js","original":{"line":62,"column":8},"name":"google"},{"generated":{"line":103,"column":12},"source":"src/index.js","original":{"line":62,"column":14}},{"generated":{"line":103,"column":15},"source":"src/index.js","original":{"line":62,"column":17},"name":"L"},{"generated":{"line":103,"column":16},"source":"src/index.js","original":{"line":62,"column":18}},{"generated":{"line":103,"column":17},"source":"src/index.js","original":{"line":62,"column":19},"name":"tileLayer"},{"generated":{"line":103,"column":26},"source":"src/index.js","original":{"line":62,"column":17}},{"generated":{"line":103,"column":27},"source":"src/index.js","original":{"line":62,"column":29}},{"generated":{"line":103,"column":97},"source":"src/index.js","original":{"line":62,"column":17}},{"generated":{"line":103,"column":99},"source":"src/index.js","original":{"line":62,"column":101}},{"generated":{"line":104,"column":4},"source":"src/index.js","original":{"line":63,"column":8},"name":"maxZoom"},{"generated":{"line":104,"column":11},"source":"src/index.js","original":{"line":63,"column":15}},{"generated":{"line":104,"column":13},"source":"src/index.js","original":{"line":63,"column":17}},{"generated":{"line":104,"column":15},"source":"src/index.js","original":{"line":62,"column":101}},{"generated":{"line":105,"column":4},"source":"src/index.js","original":{"line":64,"column":8},"name":"minZoom"},{"generated":{"line":105,"column":11},"source":"src/index.js","original":{"line":64,"column":15}},{"generated":{"line":105,"column":13},"source":"src/index.js","original":{"line":64,"column":17}},{"generated":{"line":105,"column":14},"source":"src/index.js","original":{"line":62,"column":101}},{"generated":{"line":106,"column":4},"source":"src/index.js","original":{"line":65,"column":8},"name":"subdomains"},{"generated":{"line":106,"column":14},"source":"src/index.js","original":{"line":65,"column":18}},{"generated":{"line":106,"column":16},"source":"src/index.js","original":{"line":65,"column":20}},{"generated":{"line":106,"column":17},"source":"src/index.js","original":{"line":65,"column":21}},{"generated":{"line":106,"column":22},"source":"src/index.js","original":{"line":65,"column":20}},{"generated":{"line":106,"column":24},"source":"src/index.js","original":{"line":65,"column":28}},{"generated":{"line":106,"column":29},"source":"src/index.js","original":{"line":65,"column":20}},{"generated":{"line":106,"column":31},"source":"src/index.js","original":{"line":65,"column":35}},{"generated":{"line":106,"column":36},"source":"src/index.js","original":{"line":65,"column":20}},{"generated":{"line":106,"column":38},"source":"src/index.js","original":{"line":65,"column":42}},{"generated":{"line":106,"column":43},"source":"src/index.js","original":{"line":65,"column":20}},{"generated":{"line":107,"column":2},"source":"src/index.js","original":{"line":62,"column":101}},{"generated":{"line":107,"column":3},"source":"src/index.js","original":{"line":62,"column":17}},{"generated":{"line":107,"column":5},"source":"src/index.js","original":{"line":66,"column":7},"name":"addTo"},{"generated":{"line":107,"column":10},"source":"src/index.js","original":{"line":62,"column":17}},{"generated":{"line":107,"column":11},"source":"src/index.js","original":{"line":66,"column":13},"name":"map"},{"generated":{"line":107,"column":14},"source":"src/index.js","original":{"line":62,"column":17}},{"generated":{"line":107,"column":15},"source":"src/index.js","original":{"line":62,"column":4}},{"generated":{"line":108,"column":2},"source":"src/index.js","original":{"line":68,"column":4}},{"generated":{"line":108,"column":6},"source":"src/index.js","original":{"line":68,"column":8},"name":"baseMaps"},{"generated":{"line":108,"column":14},"source":"src/index.js","original":{"line":68,"column":16}},{"generated":{"line":108,"column":17},"source":"src/index.js","original":{"line":68,"column":19}},{"generated":{"line":109,"column":4},"source":"src/index.js","original":{"line":69,"column":8}},{"generated":{"line":109,"column":21},"source":"src/index.js","original":{"line":69,"column":25},"name":"osm"},{"generated":{"line":109,"column":24},"source":"src/index.js","original":{"line":68,"column":19}},{"generated":{"line":110,"column":4},"source":"src/index.js","original":{"line":70,"column":8}},{"generated":{"line":110,"column":19},"source":"src/index.js","original":{"line":70,"column":23},"name":"google"},{"generated":{"line":111,"column":2},"source":"src/index.js","original":{"line":68,"column":19}},{"generated":{"line":111,"column":3},"source":"src/index.js","original":{"line":68,"column":4}},{"generated":{"line":112,"column":2},"source":"src/index.js","original":{"line":73,"column":4}},{"generated":{"line":112,"column":6},"source":"src/index.js","original":{"line":73,"column":8},"name":"overlayMaps"},{"generated":{"line":112,"column":17},"source":"src/index.js","original":{"line":73,"column":19}},{"generated":{"line":112,"column":20},"source":"src/index.js","original":{"line":73,"column":22}},{"generated":{"line":113,"column":4},"source":"src/index.js","original":{"line":74,"column":8}},{"generated":{"line":113,"column":21},"source":"src/index.js","original":{"line":74,"column":25},"name":"geoJson"},{"generated":{"line":114,"column":2},"source":"src/index.js","original":{"line":73,"column":22}},{"generated":{"line":114,"column":3},"source":"src/index.js","original":{"line":73,"column":4}},{"generated":{"line":115,"column":2},"source":"src/index.js","original":{"line":77,"column":4}},{"generated":{"line":115,"column":6},"source":"src/index.js","original":{"line":77,"column":8},"name":"layerControl"},{"generated":{"line":115,"column":18},"source":"src/index.js","original":{"line":77,"column":20}},{"generated":{"line":115,"column":21},"source":"src/index.js","original":{"line":77,"column":23},"name":"L"},{"generated":{"line":115,"column":22},"source":"src/index.js","original":{"line":77,"column":24}},{"generated":{"line":115,"column":23},"source":"src/index.js","original":{"line":77,"column":25},"name":"control"},{"generated":{"line":115,"column":30},"source":"src/index.js","original":{"line":77,"column":23}},{"generated":{"line":115,"column":31},"source":"src/index.js","original":{"line":77,"column":33},"name":"layers"},{"generated":{"line":115,"column":37},"source":"src/index.js","original":{"line":77,"column":23}},{"generated":{"line":115,"column":38},"source":"src/index.js","original":{"line":77,"column":40},"name":"baseMaps"},{"generated":{"line":115,"column":46},"source":"src/index.js","original":{"line":77,"column":23}},{"generated":{"line":115,"column":48},"source":"src/index.js","original":{"line":77,"column":50},"name":"overlayMaps"},{"generated":{"line":115,"column":59},"source":"src/index.js","original":{"line":77,"column":23}},{"generated":{"line":115,"column":61},"source":"src/index.js","original":{"line":77,"column":63},"name":"addTo"},{"generated":{"line":115,"column":66},"source":"src/index.js","original":{"line":77,"column":23}},{"generated":{"line":115,"column":67},"source":"src/index.js","original":{"line":77,"column":69},"name":"map"},{"generated":{"line":115,"column":70},"source":"src/index.js","original":{"line":77,"column":23}},{"generated":{"line":115,"column":71},"source":"src/index.js","original":{"line":77,"column":4}},{"generated":{"line":116,"column":2},"source":"src/index.js","original":{"line":79,"column":4},"name":"map"},{"generated":{"line":116,"column":5},"source":"src/index.js","original":{"line":79,"column":7}},{"generated":{"line":116,"column":6},"source":"src/index.js","original":{"line":79,"column":8},"name":"fitBounds"},{"generated":{"line":116,"column":15},"source":"src/index.js","original":{"line":79,"column":4}},{"generated":{"line":116,"column":16},"source":"src/index.js","original":{"line":79,"column":18},"name":"geoJson"},{"generated":{"line":116,"column":23},"source":"src/index.js","original":{"line":79,"column":25}},{"generated":{"line":116,"column":24},"source":"src/index.js","original":{"line":79,"column":26},"name":"getBounds"},{"generated":{"line":116,"column":33},"source":"src/index.js","original":{"line":79,"column":18}},{"generated":{"line":116,"column":35},"source":"src/index.js","original":{"line":79,"column":4}},{"generated":{"line":117,"column":0},"source":"src/index.js","original":{"line":81,"column":1}},{"generated":{"line":117,"column":1},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":119,"column":0},"source":"src/index.js","original":{"line":84,"column":0},"name":"fetchData"},{"generated":{"line":119,"column":9},"source":"src/index.js","original":{"line":84,"column":9}}],"sources":{"src/index.js":"import \"./styles.css\";\nimport \"./leaflet/leaflet.css\"\nimport \"./leaflet/leaflet\"\n\nconst fetchData = async () => {\n    const urlGeoData = \"https://geo.stat.fi/geoserver/wfs?service=WFS&version=2.0.0&request=GetFeature&typeName=tilastointialueet:kunta4500k&outputFormat=json&srsName=EPSG:4326\";\n    const urlPositiveMigrationData = \"https://statfin.stat.fi/PxWeb/sq/4bb2c735-1dc3-4c5e-bde7-2165df85e65f\";\n    const urlNegativeMigrationData = \"https://statfin.stat.fi/PxWeb/sq/944493ca-ea4d-4fd9-a75c-4975192f7b6e\";\n\n    const response1 = await fetch(urlGeoData);\n    const geoData = await response1.json();\n\n    const response2 = await fetch(urlPositiveMigrationData);\n    const positiveMigrationData = await response2.json();\n\n    const response3 = await fetch(urlNegativeMigrationData);\n    const negativeMigrationData = await response3.json();\n\n    initMap(geoData, positiveMigrationData, negativeMigrationData)\n}\n\nconst initMap = (geoData, positiveMigrationData, negativeMigrationData) => {\n    let index = 0;\n    const getFeature = (feature, layer) => {\n        index++;\n        //console.log(feature)\n        //layer.bindPopup(`<p>${feature.properties.name}</p>`)\n        layer.bindTooltip(`<p>${feature.properties.name}</p>`).openTooltip()\n\n        layer.bindPopup(\n            `<ul>\n                <li>${positiveMigrationData.dataset.value[index]}</li>\n                <li>${negativeMigrationData.dataset.value[index]}</li>\n            </ul>`\n        )\n        //console.log(feature.id)\n        //console.log(positiveMigrationData)\n        //console.log(geoData)\n        //console.log(positiveMigrationData.dataset.value[index])\n    }\n\n    const getStyle = (feature) => {\n        return {\n            weight: 2\n        }\n    }\n\n    let map = L.map('map', {\n        minZoom: -3\n    })\n\n    let geoJson = L.geoJSON(geoData, {\n        onEachFeature: getFeature,\n        style: getStyle\n    }).addTo(map)\n\n    let osm = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 19,\n        attribution: \"© OpenStreetMap\"\n    }).addTo(map);\n\n    let google = L.tileLayer(\"https://{s}.google.com/vt/lyrs=s@221097413,traffic&x={x}&y={y}&z={z}\", {\n        maxZoom: 20,\n        minZoom: 2,\n        subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\n    }).addTo(map)\n\n    let baseMaps = {\n        \"OpenStreetMap\": osm,\n        \"Google Maps\": google\n    }\n\n    let overlayMaps = {\n        \"Suomen kunnat\": geoJson\n    }\n\n    let layerControl = L.control.layers(baseMaps, overlayMaps).addTo(map);\n\n    map.fitBounds(geoJson.getBounds())\n\n}\n\n\nfetchData()"},"lineCount":null}},"error":null,"hash":"454eb09d7b4a8f6dff52d2ac958604a2","cacheData":{"env":{}}}